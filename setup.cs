// #include classes/main.cs
// #include classes/setup.cs
// #include classes/blocks/base/blocks.cs
// #include classes/blocks/base/blocks_typed.cs

public string program() { buildActions(); return "Настройка структуры"; }

private int gIndex;
private List<Action> actions;

public void main(string argument, UpdateType updateSource)
{
       if (argument.Length == 0) { step(gIndex); }
  else if (argument == "start")  { gIndex = 0; Runtime.UpdateFrequency = UpdateFrequency.Update1; }
  else if (argument == "start slow")  { gIndex = 0; Runtime.UpdateFrequency = UpdateFrequency.Update10; }
  else if (argument == "start very slow")  { gIndex = 0; Runtime.UpdateFrequency = UpdateFrequency.Update100; }
  else if (argument == "stop")   { stop(); }
}

private object c_setup = null;
private int bIndex;
private void buildActions()
{
  actions = new List<Action>();
  // lamps                                                                                                                                                                              terml invtr toolb
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("SmallLight"              ), "Лампа"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("Light_1corner"           ), "Угл. Лампа"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("Light_2corner"           ), "2хУгл. Лампа"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("LightPanel"              ), "Светопанель"          ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("OffsetLight"             ), "Диодная фара"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyInteriorLight>      (new CBlocksTyped<IMyInteriorLight>       ("PassageSciFiLight"       ), "SciFi свет"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyInteriorLight>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyReflectorLight>     (new CBlocksTyped<IMyReflectorLight>      ("FrontLight"              ), "Прожектор"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyReflectorLight>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyReflectorLight>     (new CBlocksTyped<IMyReflectorLight>      ("RotatingLight"           ), "Вр. прожектор"        ,false,false,false); bIndex = 0; } if(((CSetup<IMyReflectorLight>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyReflectorLight>     (new CBlocksTyped<IMyReflectorLight>      ("Spotlight"               ), "Фара"                 ,false,false,false); bIndex = 0; } if(((CSetup<IMyReflectorLight>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // cryo
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCryoChamber>        (new CBlocksTyped<IMyCryoChamber>         ("Bed"                     ), "Кровать"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyCryoChamber>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCryoChamber>        (new CBlocksTyped<IMyCryoChamber>         ("Cryo"                    ), "Криокамера"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyCryoChamber>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // automatisation && access
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyControlPanel>       (new CBlocks     <IMyControlPanel>        (                          ), "Панель упр."          ,false,false,false); bIndex = 0; } if(((CSetup<IMyControlPanel>       )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMySoundBlock>         (new CBlocks     <IMySoundBlock>          (                          ), "Динамик"              ,false,false,false); bIndex = 0; } if(((CSetup<IMySoundBlock>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyButtonPanel>        (new CBlocks     <IMyButtonPanel>         (                          ), "Кнопки"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyButtonPanel>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyTimerBlock>         (new CBlocks     <IMyTimerBlock>          (                          ), "Таймер"               ,true ,false,true ); bIndex = 0; } if(((CSetup<IMyTimerBlock>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMySensorBlock>        (new CBlocks     <IMySensorBlock>         (                          ), "Сенсор"               ,false,false,false); bIndex = 0; } if(((CSetup<IMySensorBlock>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // displays
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyTextPanel>          (new CBlocks     <IMyTextPanel>           (                          ), "Дисплей"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyTextPanel>          )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // landgears
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLandingGear>        (new CBlocksTyped<IMyLandingGear>         ("LandingGear"             ), "Шасси"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyLandingGear>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLandingGear>        (new CBlocksTyped<IMyLandingGear>         ("MagneticPlate"           ), "Магнитоплита"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyLandingGear>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLandingGear>        (new CBlocksTyped<IMyLandingGear>         ("SmallMagneticPlate"      ), "Магнитоплита малая"   ,false,false,false); bIndex = 0; } if(((CSetup<IMyLandingGear>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // connection
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyShipConnector>      (new CBlocks     <IMyShipConnector>       (                          ), "Коннектор"            ,false,false,true ); bIndex = 0; } if(((CSetup<IMyShipConnector>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyShipMergeBlock>     (new CBlocks     <IMyShipMergeBlock>      (                          ), "Соединитель"          ,false,false,false); bIndex = 0; } if(((CSetup<IMyShipMergeBlock>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // effectors
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyPistonBase>         (new CBlocks     <IMyPistonBase>          (                          ), "Поршень"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyPistonBase>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorStator>        (new CBlocks     <IMyMotorStator>         (                          ), "Ротор"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorStator>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorAdvancedStator>(new CBlocks     <IMyMotorAdvancedStator> (                          ), "Ул. Ротор"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorAdvancedStator>)c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // tools
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyShipDrill>          (new CBlocks     <IMyShipDrill>           (                          ), "Бур"                  ,false,false,false); bIndex = 0; } if(((CSetup<IMyShipDrill>          )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyShipGrinder>        (new CBlocks     <IMyShipGrinder>         (                          ), "Резак"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyShipGrinder>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyShipWelder>         (new CBlocks     <IMyShipWelder>          (                          ), "Сварщик"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyShipWelder>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCollector>          (new CBlocks     <IMyCollector>           (                          ), "Коллектор"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyCollector>          )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyOreDetector>        (new CBlocks     <IMyOreDetector>         (                          ), "Детектор руды"        ,false,false,false); bIndex = 0; } if(((CSetup<IMyOreDetector>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyRadioAntenna>       (new CBlocks     <IMyRadioAntenna>        (                          ), "Антенна"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyRadioAntenna>       )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLaserAntenna>       (new CBlocks     <IMyLaserAntenna>        (                          ), "Л.Антенна"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyLaserAntenna>       )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // cockpits
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("Couch"                   ), "Диван"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("CouchCorner"             ), "Угл. диван"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("Bathroom"                ), "Ванная"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("BathroomOpen"            ), "Откр. ванная"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("Toilet"                  ), "Туалет"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("Desk"                    ), "Стол"                 ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("ВeskCorner"              ), "Угл. стол"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("PassengerBench"          ), "Пасс. скамья"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("PassengerSeat"           ), "Пасс. сиденье"        ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("CockpitSeat"             ), "Сиденье"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("BuggyCockpit"            ), "Багги-руль"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("RoverCockpit"            ), "Ровер-руль"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("CockpitOpen"             ), "Кокпит"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("OpenCockpit"             ), "Кресло управления"    ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("BlockCockpit"            ), "Кокпит"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("FighterCockpit"          ), "Истр. кокпит"         ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("CockpitIndustrial"       ), "Подвес. кокпит"       ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCockpit>            (new CBlocksTyped<IMyCockpit>             ("StandingCockpit"         ), "Штурвал"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyCockpit>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // manufacturing
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyRefinery>           (new CBlocks     <IMyRefinery>            (                          ), "Очиститель"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyRefinery>           )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyAssembler>          (new CBlocksTyped<IMyAssembler>           ("LargeAssembler"          ), "Сборщик"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyAssembler>          )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasGenerator>       (new CBlocks     <IMyGasGenerator>        (                          ), "H2:O2 Генератор"      ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasGenerator>       )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyOxygenFarm>         (new CBlocks     <IMyOxygenFarm>          (                          ), "Ферма O2"             ,false,false,false); bIndex = 0; } if(((CSetup<IMyOxygenFarm>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // weapon
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMySmallGatlingGun>    (new CBlocks     <IMySmallGatlingGun>     (                          ), "М.Пушка"              ,false,false,false); bIndex = 0; } if(((CSetup<IMySmallGatlingGun>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLargeGatlingTurret> (new CBlocks     <IMyLargeGatlingTurret>  (                          ), "Б.Пушка"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyLargeGatlingTurret> )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLargeMissileTurret> (new CBlocks     <IMyLargeMissileTurret>  (                          ), "Б.Ракетница"          ,false,false,false); bIndex = 0; } if(((CSetup<IMyLargeMissileTurret> )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyLargeInteriorTurret>(new CBlocks     <IMyLargeInteriorTurret> (                          ), "Б.Инт.Пушка"          ,false,false,false); bIndex = 0; } if(((CSetup<IMyLargeInteriorTurret>)c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // power
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyPowerProducer>      (new CBlocksTyped<IMyPowerProducer>       ("HydrogenEngine"          ), "H2 Электрогенератор"  ,false,false,false); bIndex = 0; } if(((CSetup<IMyPowerProducer>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyPowerProducer>      (new CBlocksTyped<IMyPowerProducer>       ("WindTurbine"             ), "Ветрогенератор"       ,false,false,false); bIndex = 0; } if(((CSetup<IMyPowerProducer>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyBatteryBlock>       (new CBlocks     <IMyBatteryBlock>        (                          ), "Батарея"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyBatteryBlock>       )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMySolarPanel>         (new CBlocks     <IMySolarPanel>          (                          ), "С.Батарея"            ,false,false,false); bIndex = 0; } if(((CSetup<IMySolarPanel>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // modules
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyUpgradeModule>      (new CBlocksTyped<IMyUpgradeModule>       ("ProductivityModule"      ), "М.Продуктивности"     ,false,false,false); bIndex = 0; } if(((CSetup<IMyUpgradeModule>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyUpgradeModule>      (new CBlocksTyped<IMyUpgradeModule>       ("EffectivenessModule"     ), "М.Эффективности"      ,false,false,false); bIndex = 0; } if(((CSetup<IMyUpgradeModule>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyUpgradeModule>      (new CBlocksTyped<IMyUpgradeModule>       ("EnergyModule"            ), "М.Энергоэффективности",false,false,false); bIndex = 0; } if(((CSetup<IMyUpgradeModule>      )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // conveyors
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyConveyorSorter>     (new CBlocks     <IMyConveyorSorter>      (                          ), "Сортировщик"          ,false,false,true  ); bIndex = 0; } if(((CSetup<IMyConveyorSorter>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // containers
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("SmallContainer"          ), "МК"                   ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("MediumContainer"         ), "СК"                   ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("LargeContainer"          ), "БК"                   ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("LargeIndustrialContainer"), "БК"                   ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("LockerRoom"              ), "Кам. хранения"        ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("Lockers"                 ), "Шкафы"                ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCargoContainer>     (new CBlocksTyped<IMyCargoContainer>      ("WeaponRack"              ), "Оруж. шкаф"           ,false,true ,false); bIndex = 0; } if(((CSetup<IMyCargoContainer>     )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // tanks
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("OxygenTankSmall"         ), "Бак O2"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("OxygenTank/"             ), "Б.Бак O2"             ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("/LargeHydrogenTank"      ), "ОБ.Бак H2"            ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("/LargeHydrogenTankSmall" ), "Б.Бак H2"             ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("/SmallHydrogenTank"      ), "Бак H2"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGasTank>            (new CBlocksTyped<IMyGasTank>             ("/SmallHydrogenTankSmall" ), "Бак H2"               ,false,false,false); bIndex = 0; } if(((CSetup<IMyGasTank>            )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // suspensions
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension1x1"           ), "Колесо 1x1 правое"    ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension3x3"           ), "Колесо 3x3 правое"    ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension5x5"           ), "Колесо 5x5 правое"    ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension1x1mirrored"   ), "Колесо 1x1 левое"     ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension3x3mirrored"   ), "Колесо 3x3 левое"     ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMotorSuspension>    (new CBlocksTyped<IMyMotorSuspension>     ("Suspension5x5mirrored"   ), "Колесо 5x5 левое"     ,false,false,false); bIndex = 0; } if(((CSetup<IMyMotorSuspension>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // thrusts
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("LargeAtmosphericThrust"  ), "БАУ"                  ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("SmallAtmosphericThrust"  ), "АУ"                   ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("LargeHydrogenThrust"     ), "БВУ"                  ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("SmallHydrogenThrust"     ), "ВУ"                   ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("LargeThrust"             ), "БИУ"                  ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("SmallThrust"             ), "ИУ"                   ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("LargeModularThruster"    ), "БМИУ"                 ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyThrust>             (new CBlocksTyped<IMyThrust>              ("SmallModularThruster"    ), "ММИУ"                 ,false,false,false); bIndex = 0; } if(((CSetup<IMyThrust>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // doors
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyDoor>               (new CBlocks     <IMyDoor>                (                          ), "Дверь"                ,false,false,false); bIndex = 0; } if(((CSetup<IMyDoor>               )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyAirtightHangarDoor> (new CBlocks     <IMyAirtightHangarDoor>  (                          ), "Ангарслайд"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyAirtightHangarDoor> )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  // unsorted
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyRemoteControl>      (new CBlocks     <IMyRemoteControl>       (                          ), "ДУ"                   ,true,false,true); bIndex = 0; } if(((CSetup<IMyRemoteControl>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyMedicalRoom>        (new CBlocks     <IMyMedicalRoom>         (                          ), "Медпост"              ,false,false,false); bIndex = 0; } if(((CSetup<IMyMedicalRoom>        )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyFunctionalBlock>    (new CBlocksTyped<IMyFunctionalBlock>     ("MedicalStation"          ), "Медстанция"           ,false,false,false); bIndex = 0; } if(((CSetup<IMyFunctionalBlock>    )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyAirVent>            (new CBlocks     <IMyAirVent>             (                          ), "Вентиляция"           ,false,false,true); bIndex = 0; } if(((CSetup<IMyAirVent>             )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyCameraBlock>        (new CBlocks     <IMyCameraBlock>         (                          ), "Камера"               ,false,false,true); bIndex = 0; } if(((CSetup<IMyCameraBlock>         )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyProjector>          (new CBlocks     <IMyProjector>           (                          ), "Проектор"             ,false,false,true); bIndex = 0; } if(((CSetup<IMyProjector>           )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });
  actions.Add(() => { if(c_setup == null) { c_setup = new CSetup<IMyGyro>               (new CBlocks     <IMyGyro>                (                          ), "Гироскоп"             ,false,false,false); bIndex = 0; } if(((CSetup<IMyGyro>               )c_setup).setup(bIndex++)) { c_setup = null; gIndex++; } });

}

public void step(int index)
{
  if(index >= actions.Count) { stop(); return; }
  actions[index]();
}

public void stop() { Runtime.UpdateFrequency = UpdateFrequency.None; applyDefaultMeDisplayTexsts(); }
